{"version":3,"sources":["useFetch.js","Home.js","Navbar.js","CuriosityStats.js","Curiosity.js","OpportunityStats.js","Opportunity.js","SpiritStats.js","Spirit.js","PerseveranceStats.js","Perseverance.js","App.js","index.js"],"names":["useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortContr","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","abort","Home","className","src","alt","rovers","map","rover","style","color","padding","launch_date","landing_date","max_sol","status","total_photos","Navbar","isExpanded","setIsExpanded","to","onClick","CuriosityStats","filter","roverSpirit","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","gridList","width","height","Curiosity","classes","sol","setSol","camera","setCamera","type","maxLength","value","onChange","e","target","ImageList","cellHeight","cols","photos","photo","ImageListItem","img_src","full_name","OpportunityStats","Opportunity","SpiritStats","Spirit","PerseveranceStats","Perseverance","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc97a77c.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n\n\nconst useFetch = (url) => {                                 // custom hook, reusable\n    const [data, setData] = useState();\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n    const abortContr = new AbortController();\n\n        fetch(url, { signal: abortContr.signal })\n        .then(res => {\n            if(!res.ok) {\n                throw Error('Cannot connect to Mars')\n            }\n            return res.json();\n        })\n        .then(data => {\n            setData(data)\n            setIsPending(false)\n            setError(null)\n        })\n        .catch(err => {\n            if(err.name === 'AbortError') {\n                console.log('Fetch aborted')\n            } else {\n                setIsPending(false)\n                setError(null)\n            }\n        });\n\n    return () => abortContr.abort();    \n\n    }, [url]);  // whenever the data changes in url, this function reruns\n\n    return { data, isPending, error }               // returning properties\n}\n\nexport default useFetch;","import useFetch from './useFetch';\n\nconst Home = () => {\n   const {data, isPending, error } = useFetch('https://mars-photos.herokuapp.com/api/v1/rovers')  // destructing properties from url endpoint\n\n\n\n    return ( \n      <div className='main'>\n\n         <div className=\"mars-title\">\n            <h1 className=\"title mars\">Welcome to Mars</h1>\n            <div className=\"mars-image\">\n               <img src=\"./mars.svg\" alt=\"mars-planet\" />\n            </div>\n         </div>\n       \n\n      <table className=\"table\">\n            \n               <img className='favorite-photo' src=\"./1.jpg\" alt=\"photo1\" />\n               <img className='favorite-photo' src=\"./1.jpeg\" alt=\"photo2\" />\n               <img className='favorite-photo' src=\"./2.jpg\" alt=\"photo3\" />\n               <img className='favorite-photo' src=\"./2.jpeg\" alt=\"photo4\" />\n            \n           \n               <img className='favorite-photo' src=\"./7.jpg\" alt=\"photo5\" />\n               <img className='favorite-photo' src=\"./8.jpeg\" alt=\"photo6\" />\n               <img className='favorite-photo' src=\"./8.jpg\" alt=\"photo7\" />\n               <img className='favorite-photo' src=\"./10.jpg\" alt=\"photo8\" />\n            \n      </table>\n\n        <div className=\"rovers_stats\">\n            {error && <div>{ error }</div>}\n            console.log({error})\n            {isPending && <div className=\"title\" >Getting information from Mars, please be patient...</div> }\n\n            {data?.rovers.map(rover => \n                  <div>\n                     <h3 style={{color: 'white', padding: '15px'}} > \n                        <big className='bigText'>{rover.name}</big>  : \n                           Launch date - {rover.launch_date}, \n                           Landing date - {rover.landing_date}, \n                           Max Sol - {rover.max_sol},\n                           Status - <big className='active'>{rover.status}</big>,\n                           Total photos - {rover.total_photos}\n                     </h3>\n                  </div>\n                )}\n        </div>\n        </div>\n     );\n}\n \nexport default Home;","import { Link } from 'react-router-dom'\nimport { useState } from 'react';\n\n\nconst Navbar = () => {\n\n    const [isExpanded, setIsExpanded] = useState(false)\n\n    return ( \n        <nav className=\"navbar\">\n                <div className='mars_link'><Link to=\"/\">Mars Rovers</Link></div>\n\n                <div className='nav_links'>\n\n                    <Link to=\"/curiosity\" >Curiosity</Link>\n\n                    <Link to=\"/opportunity\" >Opportunity</Link>\n\n                    <Link to=\"/spirit\" >Spirit</Link>\n\n                    <Link to=\"/perseverance\" >Perseverance</Link>\n                </div>\n\n                <button onClick={() => {setIsExpanded(!isExpanded)}} className=\"menu\"><img src=\"./rover.svg\" alt=\"rover\" />\n                \n                <div className={isExpanded ? \"hamburger\" : \"unvisible_menu\"}>\n\n\n                    <Link onClick={() => {setIsExpanded(!isExpanded)}} to=\"/curiosity\" >Curiosity</Link>\n\n                    <Link onClick={() => {setIsExpanded(!isExpanded)}} to=\"/opportunity\" >Opportunity</Link>\n\n                    <Link onClick={() => {setIsExpanded(!isExpanded)}} to=\"/spirit\" >Spirit</Link>\n\n                    <Link onClick={() => {setIsExpanded(!isExpanded)}} to=\"/perseverance\" >Perseverance</Link>\n\n                    </div>\n\n                </button>\n\n\n                \n        </nav>\n     );\n}\n \nexport default Navbar;\n","import useFetch from \"./useFetch\"\n\nconst CuriosityStats = () => {\n\nconst {data, isPending, error } = useFetch('https://mars-photos.herokuapp.com/api/v1/rovers')\n\nreturn (\n<div className=\"rovers_stats\">\n\n            {error && <div>{ error }</div>}\n            {isPending && <div className=\"title\" >Getting information from Mars, please be patient...</div> }\n            {data?.rovers.filter(roverSpirit => roverSpirit.name === 'Curiosity').map(rover => \n                  <div>\n                     <h3 style={{color: 'white', padding: '15px'}} > \n                         \n                           <big className=\"bigText\">Launch date</big> - {rover.launch_date} <br/>\n                           <big className=\"bigText\"> Landing date</big> - {rover.landing_date} <br/>\n                           <big className=\"bigText\">Max Sol</big> - {rover.max_sol} <br/>\n                           <big className=\"bigText\">Status</big> - {rover.status} <br/>\n                           <big className=\"bigText\">Total photos</big> - {rover.total_photos} <br/>\n                     </h3>\n                  </div>\n                )}\n        </div>\n)\n}\n\nexport default CuriosityStats;","import React from 'react'\nimport useFetch from './useFetch';\nimport { useState } from 'react';\nimport { ImageList, ImageListItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CuriosityStats from './CuriosityStats';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden'\n    },\n    gridList: {\n      width: '100%',\n      height: '100%',\n    },\n  }));\n  \n\nconst Curiosity = () => {\n    const classes = useStyles();\n    const [sol, setSol] = useState('14');\n    const [camera, setCamera] = useState('fhaz')\n    const { data, isPending, error } = useFetch(`https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?sol=${sol}&camera=${camera}&page=1&api_key=qQ3X7Uk2HHs4IDxWimSn50yxS6vAq87frJe5Dluy`);\n    \n    return ( \n        <div>\n            <h1 className=\"title\">Curiosity Rover</h1>\n            <figure>\n                <img src=\"./curiosity1.png\" alt=\"curiosity\" />\n            </figure>\n\n            \n            {error && <div>{ error }</div>}\n            {isPending && <div className=\"title\">Getting photos from Mars, please be patient...</div> }\n            <CuriosityStats />\n\n            <div className=\"search\">\n                <h3 className=\"title\">Search photos by number of SOL (Martian rotation) and camera type, gallery will load automatically</h3>\n\n                <form>\n                    <label className=\"label\">Sol number</label>\n                    <input \n                    className=\"input\"\n                    type=\"text\"\n                    maxLength='4'\n                    value={sol}\n                    onChange={(e) => setSol(e.target.value)}\n                    />\n                    \n                    <label className=\"label\">Camera type</label>\n                    <select\n                        className=\"input\"\n                        value={camera}\n                        onChange={(e) => setCamera(e.target.value)}\n                    >\n                        <option style={{color: 'black'}} value=\"fhaz\">Front Hazard Avoindance Camera</option>\n                        <option style={{color: 'black'}} value=\"rhaz\">Rear Hazard Avoindance Camera</option>\n                        <option style={{color: 'black'}} value=\"navcam\">Navigation Camera</option>\n                    </select>\n                </form>\n            </div>\n            \n            {data &&  <div className={classes.root}>\n                            <h3 className=\"title\">Here are Curiosity photos on SOL {sol} taken with {camera} camera <br/> \n                            <small className=\"title\">*If it's loading no photos, choose another camera or SOL</small> </h3>\n\n                            <ImageList cellHeight={700} className={classes.gridList} cols={2}>\n                                {data.photos.map(photo=> \n                                    <ImageListItem key={photo.img_src} cols={photo.cols || 1}>\n                                        <img src={photo.img_src} alt={photo.camera.full_name} className=\"image\" />\n                                    </ImageListItem>\n                                )}\n                            </ImageList>\n                        </div>\n            }\n            </div>\n    )}\n \nexport default Curiosity;","import useFetch from \"./useFetch\"\n\nconst OpportunityStats = () => {\n\nconst {data, isPending, error } = useFetch('https://mars-photos.herokuapp.com/api/v1/rovers')\n\nreturn (\n<div className=\"rovers_stats\">\n\n            {error && <div>{ error }</div>}\n            {isPending && <div className=\"title\" >Getting information from Mars, please be patient...</div> }\n            {data?.rovers.filter(roverSpirit => roverSpirit.name === 'Opportunity').map(rover => \n                  <div>\n                     <h3 style={{color: 'white', padding: '15px'}} > \n                         \n                           <big className=\"bigText\">Launch date</big> - {rover.launch_date} <br/>\n                           <big className=\"bigText\"> Landing date</big> - {rover.landing_date} <br/>\n                           <big className=\"bigText\">Max Sol</big> - {rover.max_sol} <br/>\n                           <big className=\"bigText\">Status</big> - {rover.status} <br/>\n                           <big className=\"bigText\">Total photos</big> - {rover.total_photos} <br/>\n                     </h3>\n                  </div>\n                )}\n        </div>\n)\n}\n\nexport default OpportunityStats;","import React from 'react'\nimport useFetch from './useFetch';\nimport { ImageList, ImageListItem } from '@material-ui/core';\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport OpportunityStats from './OpportunityStats';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden'\n    },\n    gridList: {\n      width: '100%',\n      height: 1000,\n    },\n  }));\n  \n\nconst Opportunity = () => {\n    const classes = useStyles();\n    const [sol, setSol] = useState('15');\n    const [camera, setCamera] = useState('fhaz')\n    const { data, isPending, error } = useFetch(`https://api.nasa.gov/mars-photos/api/v1/rovers/opportunity/photos?sol=${sol}&camera=${camera}&page=1&api_key=qQ3X7Uk2HHs4IDxWimSn50yxS6vAq87frJe5Dluy`);\n    \n    \n    return ( \n        <div>\n            <h1 className=\"title\">Opportunity Rover</h1>\n            <figure>\n                <img src=\"./opportunity.png\" alt=\"opportunity\" />\n            </figure>\n\n            \n            {error && <div>{ error }</div>}\n            {isPending && <div className=\"title\">Getting photos from Mars, please be patient...</div> }\n            <OpportunityStats />\n\n            <div className=\"search\">\n                <h3 className=\"title\">Search photos by number of SOL (Martian rotation) and camera type, gallery will load automatically</h3>\n                <form>\n                    <label className=\"label\">Sol number</label>\n                    <input \n                    className=\"input\"\n                    type=\"text\"\n                    maxLength='4'\n                    value={sol}\n                    onChange={(e) => setSol(e.target.value)}\n                    />\n                    \n                    <label className=\"label\">Camera type</label>\n                    <select\n                        className=\"input\"\n                        value={camera}\n                        onChange={(e) => setCamera(e.target.value)}\n                    >\n                        <option style={{color: 'black'}} value=\"fhaz\">Front Hazard Avoindance Camera</option>\n                        <option style={{color: 'black'}} value=\"rhaz\">Rear Hazard Avoindance Camera</option>\n                        <option style={{color: 'black'}} value=\"navcam\">Navigation Camera</option>\n                    </select>\n                </form>\n            </div>\n            \n            {data &&  <div className={classes.root}>\n                            <h3 className=\"title\">Here are Opportunity photos on SOL {sol} taken with {camera} camera <br/> \n                            <small className=\"title\">*If it's loading no photos, choose another camera or SOL</small> </h3>\n                            \n                            <ImageList cellHeight={700} className={classes.gridList} cols={2}>\n                                {data.photos.map(photo=> \n                                    <ImageListItem key={photo.img_src} cols={photo.cols || 1}>\n                                        <img src={photo.img_src} alt={photo.camera.full_name} className=\"image\" />\n                                    </ImageListItem>\n                                )}\n                            </ImageList>\n                        </div>\n            }\n            </div>\n    )}\n \nexport default Opportunity;","import useFetch from \"./useFetch\"\n\nconst SpiritStats = () => {\n\nconst {data, isPending, error } = useFetch('https://mars-photos.herokuapp.com/api/v1/rovers')\n\nreturn (\n<div className=\"rovers_stats\">\n\n            {error && <div>{ error }</div>}\n            {isPending && <div className=\"title\" >Getting information from Mars, please be patient...</div> }\n            {data?.rovers.filter(roverSpirit => roverSpirit.name === 'Spirit').map(rover => \n                  <div>\n                     <h3 style={{color: 'white', padding: '15px'}} > \n                         \n                           <big className=\"bigText\">Launch date</big> - {rover.launch_date}, <br/>\n                           <big className=\"bigText\"> Landing date</big> - {rover.landing_date}, <br/>\n                           <big className=\"bigText\">Max Sol</big> - {rover.max_sol}, <br/>\n                           <big className=\"bigText\">Status</big> - {rover.status}, <br/>\n                           <big className=\"bigText\">Total photos</big> - {rover.total_photos} <br/>\n                     </h3>\n                  </div>\n                )}\n        </div>\n)\n}\n\nexport default SpiritStats;","import React from 'react'\nimport useFetch from './useFetch';\nimport { useState } from 'react';\nimport { ImageList, ImageListItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SpiritStats from './SpiritStats';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden'\n    },\n    gridList: {\n      width: '100%',\n      height: 1000,\n    },\n  }));\n\n  \n  \n\nconst Spirit = () => {\n    const classes = useStyles();\n    const [sol, setSol] = useState('100');\n    const [camera, setCamera] = useState('navcam')\n    const { data, isPending, error } = useFetch(`https://api.nasa.gov/mars-photos/api/v1/rovers/spirit/photos?sol=${sol}&camera=${camera}&page=1&api_key=qQ3X7Uk2HHs4IDxWimSn50yxS6vAq87frJe5Dluy`);\n    \n    return ( \n        <div>\n            <h1 className=\"title\">Spirit Rover</h1>\n            <figure>\n                <img src=\"./spirit1.png\" alt=\"spirit\" />\n            </figure>\n            <SpiritStats />\n\n            \n            {error && <div>{ error }</div>}\n            \n            {isPending && <div className=\"title\">Getting photos from Mars, please be patient...</div> }\n\n\n            <div className=\"search\">\n                <h3 className=\"title\">Search photos by number of SOL (Martian rotation) and camera type, gallery will load automatically</h3>\n                <form>\n                    <label className=\"label\">Sol number</label>\n                    <input \n                    className=\"input\"\n                    type=\"text\"\n                    maxLength='4'\n                    value={sol}\n                    onChange={(e) => setSol(e.target.value)}\n                    />\n                    \n                    <label className=\"label\">Camera type</label>\n                    <select\n                        className=\"input\"\n                        value={camera}\n                        onChange={(e) => setCamera(e.target.value)}\n                    >\n                        <option style={{color: 'black'}} value=\"fhaz\">Front Hazard Avoindance Camera</option>\n                        <option style={{color: 'black'}} value=\"rhaz\">Rear Hazard Avoindance Camera</option>\n                        <option style={{color: 'black'}} value=\"navcam\">Navigation Camera</option>\n                    </select>\n                </form>\n            </div>\n            \n            {data === [] && <div className={classes.root}>\n                                <h3 className=\"title\">Here are Spirit photos on SOL {sol} taken with {camera} camera <br/> \n                                <small className=\"title\">No photos</small> </h3>\n                            </div>\n            }\n\n            {data &&  <div className={classes.root}>\n                            <h3 className=\"title\">Here are Spirit photos on SOL {sol} taken with {camera} camera <br/> \n                            <small className=\"title\">*If it's loading no photos, choose another camera or SOL</small> </h3>\n                            \n                            <ImageList cellHeight={700} className={classes.gridList} cols={2}>\n                                {data.photos.map(photo=> \n                                    <ImageListItem key={photo.img_src} cols={photo.cols || 1}>\n                                        <img src={photo.img_src} alt={photo.camera.full_name} className=\"image\" />\n                                    </ImageListItem>\n                                )}\n                            </ImageList>\n                        </div>\n            }\n            </div>\n    )}\n \nexport default Spirit;","import useFetch from \"./useFetch\"\n\nconst PerseveranceStats = () => {\n\nconst {data, isPending, error } = useFetch('https://mars-photos.herokuapp.com/api/v1/rovers')\n\nreturn (\n<div className=\"rovers_stats\">\n\n            {error && <div>{ error }</div>}\n            {isPending && <div className=\"title\" >Getting information from Mars, please be patient...</div> }\n            {data?.rovers.filter(roverSpirit => roverSpirit.name === 'Perseverance').map(rover => \n                  <div>\n                     <h3 style={{color: 'white', padding: '15px'}} > \n                         \n                           <big className=\"bigText\">Launch date</big> - {rover.launch_date} <br/>\n                           <big className=\"bigText\"> Landing date</big> - {rover.landing_date} <br/>\n                           <big className=\"bigText\">Max Sol</big> - {rover.max_sol} <br/>\n                           <big className=\"bigText\">Status</big> - {rover.status} <br/>\n                           <big className=\"bigText\">Total photos</big> - {rover.total_photos} <br/>\n                     </h3>\n                  </div>\n                )}\n        </div>\n)\n}\n\nexport default PerseveranceStats;","import React from 'react'\nimport useFetch from './useFetch';\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ImageList, ImageListItem } from '@material-ui/core';\nimport PerseveranceStats from './PerseveranceStats';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden'\n    },\n    gridList: {\n      width: '100%',\n      height: 'auto'\n    },\n  }));\n  \n\nconst Perseverance = () => {\n    const classes = useStyles();\n    const [sol, setSol] = useState('113');\n    const [camera, setCamera] = useState('NAVCAM_LEFT')\n    const { data, isPending, error } = useFetch(`https://api.nasa.gov/mars-photos/api/v1/rovers/perseverance/photos?sol=${sol}&camera=${camera}&page=1&api_key=qQ3X7Uk2HHs4IDxWimSn50yxS6vAq87frJe5Dluy`);\n    \n    \n    return ( \n        <div>\n            <h1 className=\"title\">Perseverance Rover</h1>\n            <figure>\n                <img src=\"./perseverance.png\" alt=\"perseverance\" />\n            </figure>\n            <PerseveranceStats />\n\n            \n            {error && <div>{ error }</div>}\n            {isPending && <div className=\"title\">Getting photos from Mars, please be patient...</div> }\n\n            <div className=\"search\">\n            <h3 className=\"title\">Search photos by number of SOL (Martian rotation) and camera type, gallery will load automatically</h3>\n\n                <form>\n                    <label className=\"label\">Sol number</label>\n                    <input \n                    className=\"input\"\n                    type=\"text\"\n                    maxLength='4'\n                    value={sol}\n                    onChange={(e) => setSol(e.target.value)}\n                    />\n                    \n                    <label className=\"label\">Camera type</label>\n                    <select\n                        className=\"input\"\n                        value={camera}\n                        onChange={(e) => setCamera(e.target.value)}\n                    >\n                        <option style={{color: 'black'}} value=\"NAVCAM_LEFT\">Navigation Camera - Left</option>\n                        <option style={{color: 'black'}} value=\"MCZ_RIGHT\">Mast Camera Zoom - Right</option>\n                        <option style={{color: 'black'}} value=\"FRONT_HAZCAM_RIGHT_A\">Front Hazard Avoidance Camera - Right</option>\n                    </select>\n                </form>\n            </div>\n            \n            {data &&  <div className={classes.root}>\n                            <h3 className=\"title\"> \n                            <small>*If it's loading no photos, choose another camera or SOL</small> \n\n                            <br/>Here are Perseverance photos on SOL {sol} taken with {camera} camera \n                                \n                            </h3>\n                            \n                            <ImageList cellHeight={700} className={classes.gridList} cols={2}>\n                                {data.photos.map(photo=> \n                                    <ImageListItem key={photo.img_src} cols={photo.cols || 1}>\n                                        <img src={photo.img_src} alt={photo.camera.full_name} className=\"image\" />\n                                    </ImageListItem>\n                                )}\n                            </ImageList>\n                        </div>\n            }\n            </div>\n    )}\n \nexport default Perseverance;","import Home from './Home';\nimport Navbar from './Navbar';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Curiosity from './Curiosity';\nimport Opportunity from './Opportunity';\nimport Spirit from './Spirit';\nimport Perseverance from './Perseverance';\n\nfunction App() {     // Switch component show only one router at the time\n  return (\n    <Router>\n      <div className=\"app\">\n        <Navbar />\n\n        <div className=\"content\" > \n        <Switch>                          \n          <Route exact path=\"/\"> \n            <Home />\n          </Route>\n          <Route exact path=\"/curiosity\"> \n            <Curiosity />\n          </Route>\n          <Route exact path=\"/opportunity\"> \n            <Opportunity />\n          </Route>\n          <Route exact path=\"/spirit\"> \n            <Spirit />\n          </Route>\n          <Route exact path=\"/perseverance\"> \n            <Perseverance />\n          </Route>\n        </Switch>\n        </div>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}